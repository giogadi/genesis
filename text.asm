TEXT_A: equ (0+FONT_TILE_START)
TEXT_B: equ (1+FONT_TILE_START)
TEXT_C: equ (2+FONT_TILE_START)
TEXT_D: equ (3+FONT_TILE_START)
TEXT_E: equ (4+FONT_TILE_START)
TEXT_F: equ (5+FONT_TILE_START)
TEXT_G: equ (6+FONT_TILE_START)
TEXT_H: equ (7+FONT_TILE_START)
TEXT_I: equ (8+FONT_TILE_START)
TEXT_J: equ (9+FONT_TILE_START)
TEXT_K: equ (10+FONT_TILE_START)
TEXT_L: equ (11+FONT_TILE_START)
TEXT_M: equ (12+FONT_TILE_START)
TEXT_N: equ (13+FONT_TILE_START)
TEXT_O: equ (14+FONT_TILE_START)
TEXT_P: equ (15+FONT_TILE_START)
TEXT_Q: equ (16+FONT_TILE_START)
TEXT_R: equ (17+FONT_TILE_START)
TEXT_S: equ (18+FONT_TILE_START)
TEXT_T: equ (19+FONT_TILE_START)
TEXT_U: equ (20+FONT_TILE_START)
TEXT_V: equ (21+FONT_TILE_START)
TEXT_W: equ (22+FONT_TILE_START)
TEXT_X: equ (23+FONT_TILE_START)
TEXT_Y: equ (24+FONT_TILE_START)
TEXT_Z: equ (25+FONT_TILE_START)
TEXT_0: equ (26+FONT_TILE_START)
TEXT_1: equ (27+FONT_TILE_START)
TEXT_2: equ (28+FONT_TILE_START)
TEXT_3: equ (29+FONT_TILE_START)
TEXT_4: equ (30+FONT_TILE_START)
TEXT_5: equ (31+FONT_TILE_START)
TEXT_6: equ (32+FONT_TILE_START)
TEXT_7: equ (33+FONT_TILE_START)
TEXT_8: equ (34+FONT_TILE_START)
TEXT_9: equ (35+FONT_TILE_START)
TEXT_PERIOD: equ (36+FONT_TILE_START)
TEXT_EXCLAIM: equ (37+FONT_TILE_START)
TEXT_RIGHT_ARROW: equ (38+FONT_TILE_START)
TEXT_SPACE: equ (39+FONT_TILE_START)
TEXT_TERMINATE: equ (40+FONT_TILE_START)

; a0: points to a series of chars char tile numbers in memory. WILL BE MODIFIED
; modifies d0
TextWriteString:
.loop
    move.w (a0)+,d0
    cmp.w #TEXT_TERMINATE,d0
    beq.s .end
    move.w d0,vdp_data
    bra.s .loop
.end
    rts